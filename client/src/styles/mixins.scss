@import 'variables';

@mixin spread-map($map: ()) {
    @each $key, $value in $map {
        #{$key}: $value;
    }
}

@function themed($key, $fallback: null, $map: $theme-map-light) {
    @if not map-has-key($map, $key) {
        @error "key: '#{$key}', is not a key in color map";
    }
    @if ($fallback) {
        @return var($key, $fallback);
    } @else {
        @return var($key);
    }
}

@mixin btn(
    $bg: themed(--aliceBlue-bigStone),
    $border: themed(--blue-summerSky),
    $color: themed(--blue-summerSky),
    $bgHover: themed(--aliceBlue-bigStone),
    $borderHover: themed(--dodgerLightBlue-aquaBlue),
    $colorHover: themed(--dodgerLightBlue-aquaBlue)
) {
    background: $bg;
    border: 1px solid $border;
    color: $color;
    &:hover,
    &:focus,
    &:active {
        background: $bgHover;
        border: 1px solid $borderHover;
        color: $colorHover;
    }
    &[disabled] {
        background: $bg;
        border: 1px solid $border;
        color: $color;
        opacity: 0.6;

        &:hover,
        &:focus,
        &:active {
            background: $bg;
            border: 1px solid $border;
            color: $color;
            opacity: 0.6;
        }
    }
}

@mixin btn-danger {
    @include btn(
        $bg: themed(--cosmos-redRobin),
        $border: themed(--indianRed-sweetPink),
        $color: themed(--indianRed-sweetPink),
        $bgHover: themed(--cosmos-redRobin),
        $borderHover: themed(--apricot-pink),
        $colorHover: themed(--apricot-pink)
    );
}

@mixin btn-primary {
    @include btn(
        $bg: themed(--blue-bostonBlue),
        $border: themed(--blue-bostonBlue),
        $color: $white,
        $bgHover: themed(--lightblue-summerSky),
        $borderHover: themed(--lightblue-summerSky),
        $colorHover: $white
    );
}

@mixin btn-primary-dangerous {
    @include btn(
        $bg: themed(--outrageousOrange-orangeRoughy),
        $border: themed(--outrageousOrange-orangeRoughy),
        $color: $white,
        $bgHover: themed(--lightRed-brightOrange),
        $borderHover: themed(--lightRed-brightOrange),
        $colorHover: $white
    );
}

@mixin btn-success {
    @include btn(
        $bg: themed(--bitterDandelion-darkLime) !important,
        $border: themed(--bitterDandelion-darkLime) !important,
        $color: $white !important,
        $bgHover: themed(--vividLime-darkLime1) !important,
        $borderHover: themed(--vividLime-darkLime1) !important,
        $colorHover: $white !important
    );
}

@mixin modal-fit-content($mobileWidth: 708px, $top: 24px) {
    :global {
        .ant-modal {
            display: flex;
            flex-direction: column;
            top: $top;
            height: calc(100% - $top - $top);
            max-width: $mobileWidth;
            padding: 0;
            overflow: hidden;

            &-content {
                display: grid;
                grid-template-columns: 100%;
                grid-template-rows: max-content auto;
                height: 100%;
                overflow: hidden;
            }

            &-body {
                padding: 0;
                height: 100%;
                overflow: hidden;
            }
        }

        @media screen and (max-width: $mobileWidth) {
            .ant-modal {
                display: flex;
                flex-direction: column;
                height: calc(100% - $top);
                justify-content: flex-end;
                margin: 0;
                max-width: 100%;
                padding: 0;
                top: $top;

                &-content {
                    border-radius: 4px 4px 0 0;
                    display: grid;
                    grid-template-columns: 100%;
                    grid-template-rows: max-content 1fr;
                    overflow-y: hidden;
                }

                &-body {
                    height: 100%;
                    overflow-y: hidden;
                }
            }
        }
    }
}
